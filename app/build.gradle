/*
 * Copyright 2019 Oliver Rhyme G. AÃ±asco
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

apply plugin: 'com.google.firebase.appdistribution'

apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.google.gms.google-services'

// Load keystore
def keystorePropertiesFile = file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))


android {
    signingConfigs {
        release {
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }
    }
    compileSdkVersion 29
    buildToolsVersion "29.0.2"


    def versionPropsFile = file('version.properties')
    def valueRelease = 0
    def valueDebug = 0
    Properties versionProps = new Properties()
    if (!versionPropsFile.exists()) {
        versionProps['VERSION_PATCH'] = "0"
        versionProps['VERSION_NUMBER'] = "0"
        versionProps['VERSION_BUILD'] = "-1"
        // I set it to minus one so the first build is 0 which isn't super important.
        versionProps.store(versionPropsFile.newWriter(), null)
    }

    def runTasks = gradle.startParameter.taskNames
    if (':app:assembleRelease' in runTasks) {
        valueRelease = 1
    }
    if (':app:assembleDebug' in runTasks) {
        valueDebug = 1
    }

    def mVersionName = ""
    def mFileName = ""

    if (versionPropsFile.canRead()) {
        versionProps.load(new FileInputStream(versionPropsFile))

        versionProps['DEBUG_VERSION'] = (versionProps['DEBUG_VERSION'].toInteger() + valueDebug).toString()
        versionProps['VERSION_PATCH'] = (versionProps['VERSION_PATCH'].toInteger() + valueRelease).toString()
        versionProps['VERSION_NUMBER'] = (versionProps['VERSION_NUMBER'].toInteger() + valueRelease).toString()
        versionProps['VERSION_BUILD'] = (versionProps['VERSION_BUILD'].toInteger() + 1).toString()

        versionProps.store(versionPropsFile.newWriter(), null)

        mVersionName = "v1.${versionProps['VERSION_PATCH']}.${versionProps['DEBUG_VERSION']}_${versionProps['VERSION_BUILD']}"
        mFileName = "Snorlax-${mVersionName}.apk"

        defaultConfig {
            minSdkVersion 21
            targetSdkVersion 29
            applicationId "com.snorlax.snorlax" // 3: change to your package name
            versionCode versionProps['VERSION_NUMBER'].toInteger()
            versionName "${mVersionName}"
        }

    } else {
        throw new FileNotFoundException("Could not read version.properties!")
    }

    if (':app:assembleRelease' in runTasks) {
        android.applicationVariants.all { variant ->
            variant.outputs.all { output ->
                if (output.outputFile != null && output.outputFile.name.endsWith('.apk')) {
                    outputFileName = mFileName
                }
            }
        }
    }

//    defaultConfig {
//        applicationId "com.snorlax.snorlax"
//        minSdkVersion 21
//        targetSdkVersion 29
//        versionCode 1
//        versionName "1.0"
//        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
//    }
    buildTypes {
        debug {
            debuggable true
            firebaseAppDistribution {
                releaseNotes = "Debug build ${mVersionName}\nMultiple changes:\nChange name format\nFix crash when double clicking date picker\netc. check github commit"
                groups = "researchers, developer"
            }
        }
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles 'proguard-rules.pro', getDefaultProguardFile('proguard-android-optimize.txt')
            renderscriptOptimLevel = 3
            signingConfig signingConfigs.release

            firebaseAppDistribution {
                releaseNotes = "Release build ${mVersionName}\nVersion 1 released\nFix margin and add replaced logo"
                groups = "researchers, developer"
            }
        }
    }


    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }
}

buildscript {
    repositories {
        google()
    }
    dependencies {
        classpath 'com.google.firebase:firebase-appdistribution-gradle:1.2.0'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.firebase:firebase-auth:19.2.0'
//    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    //New Material Design
    implementation 'com.google.android.material:material:1.2.0-alpha02'

    //RxJava
    implementation 'io.reactivex.rxjava2:rxjava:2.2.15'
    implementation "io.reactivex.rxjava2:rxandroid:2.1.1"

    // CircleImageView
    implementation 'de.hdodenhof:circleimageview:3.0.1'

    // CircularProgressButton
    implementation 'br.com.simplepass:loading-button-android:2.1.5'

    // RxBinding
    implementation 'com.jakewharton.rxbinding3:rxbinding-appcompat:3.1.0'

    // CameraX
    implementation 'androidx.camera:camera-core:1.0.0-alpha06'
    implementation 'androidx.camera:camera-camera2:1.0.0-alpha06'

    // ML Vision
    implementation 'com.google.firebase:firebase-ml-vision:24.0.1'

    // Firestore
    implementation 'com.google.firebase:firebase-firestore:21.3.0'
    implementation 'com.firebaseui:firebase-ui-firestore:6.0.2'

    // Firebase Storage
    implementation 'com.google.firebase:firebase-storage:19.1.0'
    implementation 'com.firebaseui:firebase-ui-storage:6.0.2'

    // Glide
    implementation 'com.github.bumptech.glide:glide:4.10.0'
    kapt 'com.github.bumptech.glide:compiler:4.10.0'
//    implementation 'jp.wasabeef:glide-transformations:4.1.0'

    // GSON
    implementation 'com.google.code.gson:gson:2.8.6'

    // Dexter permission
    implementation 'com.karumi:dexter:6.0.0'

    // (Recommended) Add Analytics
    implementation 'com.google.firebase:firebase-analytics:17.2.1'

    // Add dependency
    implementation 'com.crashlytics.sdk.android:crashlytics:2.10.1'

    implementation 'com.chauthai.swipereveallayout:swipe-reveal-layout:1.4.1'

    // KTX
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation 'androidx.fragment:fragment-ktx:1.1.0'

    // CameraX View
    implementation "androidx.camera:camera-view:1.0.0-alpha03"

    //Leak canary
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.0-beta-5'

    // Custom tabs
    implementation 'androidx.browser:browser:1.0.0'

    // Apache POI
    implementation 'org.apache.poi:poi:4.1.1'
    implementation 'org.apache.poi:poi-ooxml:4.1.1'

    // Viewmodel
    def lifecycle_version = "2.1.0"

    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"

}
